{"version":3,"file":"static/js/104.d872a0de.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/Profile/MyPosts/MyPosts.module.css?831b","components/Profile/MyPosts/MyPostsForm/MyPostsForm.jsx","webpack://my-app/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.module.css","webpack://my-app/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","webpack://my-app/./src/components/Profile/ProfileInfo/ProfileDescription/ProfileDescription.module.css?81bc","components/Profile/ProfileInfo/ProfileDescription/ProfileDescriptionWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"myPosts\":\"MyPosts_myPosts__RjhRC\",\"posts\":\"MyPosts_posts__QhSpD\"};","import { reduxForm, Field } from \"redux-form\";\r\nimport {\r\n  maxLengthCreator,\r\n  minLengthCreator,\r\n} from \"../../../../utils/validators\";\r\nimport FormInput from \"../../../common/forms/FormInput\";\r\n\r\nconst minLength10 = minLengthCreator(10);\r\nconst maxLength300 = maxLengthCreator(300);\r\n\r\nconst MyPostsForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <Field\r\n        component={FormInput}\r\n        name=\"newPostText\"\r\n        validate={[minLength10, maxLength300]}\r\n      />\r\n      <div>\r\n        <button>Add Post</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst myPostsReduxForm = reduxForm({\r\n  form: \"myPosts\",\r\n})(MyPostsForm);\r\n\r\nexport default myPostsReduxForm;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__bggH6\",\"likeBlock\":\"Post_likeBlock__hqtqM\",\"text\":\"Post_text__8R0Y1\"};","import s from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img\r\n        src=\"https://i.pinimg.com/736x/2e/2e/21/2e2e2125ee53807c2d77b34773f84b5c.jpg\"\r\n        alt=\"start user avatar\"\r\n      />\r\n      <div className={s.text}> {props.text} </div>\r\n      <div>\r\n        <span className={s.likeBlock}>\r\n          like(btn*)\r\n          <br />({props.likes} peoples like this! )\r\n        </span>\r\n      </div>\r\n      <hr />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport MyPostsForm from \"./MyPostsForm/MyPostsForm\";\r\nimport Post from \"./Post/Post\";\r\n\r\nconst MyPosts = (props) => {\r\n  let postElements = props.posts.map((p) => (\r\n    <Post text={p.text} likes={p.likes} key={p.postId} />\r\n  ));\r\n\r\n  let onSubmit = (formData) => props.addPostFromForm(formData)\r\n\r\n  return (\r\n    <div className={s.myPosts}>\r\n      <h3>My Posts</h3>\r\n      <MyPostsForm\r\n        onSubmit={onSubmit}\r\n      />\r\n      <div className={s.posts}>{postElements}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyPosts;\r\n","import MyPosts from \"./MyPosts\";\r\nimport { addPostFromForm } from \"../../../redux/profileReducer\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText,\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { addPostFromForm })\r\n)(MyPosts);\r\n","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {\"header\":\"ProfileInfo_header__tVpgS\"};","// extracted by mini-css-extract-plugin\nexport default {\"description\":\"ProfileDescription_description__c54HU\",\"avatar\":\"ProfileDescription_avatar__+sbzZ\",\"status\":\"ProfileDescription_status__eX8Qd\"};","import React from \"react\";\r\nimport s from \"./ProfileDescription.module.css\";\r\nimport userPhoto from \"../../../../assets/img/2e2e2125ee53807c2d77b34773f84b5c.jpg\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst ProfileDescriptionWithHooks = (props) => {\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status]);\r\n\r\n  let toggleEditMode = () => {\r\n    if (editMode) {\r\n      setEditMode(false);\r\n      props.updateUserStatus(status);\r\n    } else {\r\n      setEditMode(true);\r\n    }\r\n  };\r\n\r\n  let onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n  };\r\n\r\n  return (\r\n    <div className={s.description}>\r\n      <div className={s.fullName}>{props.profile.fullName}</div>\r\n      <img\r\n        className={s.avatar}\r\n        src={\r\n          props.profile.photos.large ? props.profile.photos.large : userPhoto\r\n        }\r\n        alt=\"user avatar\"\r\n      />\r\n      <div className={s.status}>\r\n        {!editMode && (\r\n          <div onClick={toggleEditMode}>\r\n            <span>{props.status || \"------\"}</span>\r\n          </div>\r\n        )}\r\n        {editMode && (\r\n          <div>\r\n            <input\r\n              autoFocus={true}\r\n              onChange={onStatusChange}\r\n              onBlur={toggleEditMode}\r\n              value={status}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className={s.aboutMe}>{props.profile.aboutMe}</div>\r\n      <h5>About Job</h5>\r\n      <div className={s.lookingForAJob}>\r\n        Need work: {props.profile.lookingForAJob ? \"Yes\" : \"No\"}{\" \"}\r\n      </div>\r\n      <div className={s.workDescription}>\r\n        {props.profile.lookingForAJobDescription}{\" \"}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileDescriptionWithHooks;\r\n","import s from \"./ProfileInfo.module.css\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileDescriptionWithHooks from \"./ProfileDescription/ProfileDescriptionWithHooks\";\r\n\r\nconst ProfileInfo = (props) => {\r\n  if (!props.profile) {\r\n    return <Preloader />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className={s.header}>\r\n        {/* <img\r\n          src={\r\n            \"https://ichef.bbci.co.uk/news/999/cpsprodpb/6D5A/production/_119449972_10.jpg\"\r\n          }\r\n          alt=\"default header\"\r\n        /> */}\r\n      </div>\r\n      <ProfileDescriptionWithHooks\r\n        updateUserStatus={props.updateUserStatus}\r\n        profile={props.profile}\r\n        status={props.status}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport s from \"./Profile.module.css\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div className={s.profilePage}>\r\n      <ProfileInfo\r\n        profile={props.profile}\r\n        status={props.status}\r\n        updateUserStatus={props.updateUserStatus}\r\n      />\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Profile from \"./Profile\";\r\nimport {\r\n  getUserProfile,\r\n  getUserStatus,\r\n  updateUserStatus,\r\n} from \"../../redux/profileReducer\";\r\nimport { getAuth } from \"../../redux/authReducer\";\r\nimport withRouter from \"../../hoc/withRouter\";\r\nimport withAuthRedirect from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\nimport {\r\n  getMyProfileId,\r\n  getProfile,\r\n  getProfileStatus,\r\n} from \"../../redux/selectors\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n  componentDidMount = () => {\r\n    this.props.getUserProfile(\r\n      this.props.router.params.userId,\r\n      this.props.myProfileId\r\n    );\r\n    this.props.getUserStatus(\r\n      this.props.router.params.userId,\r\n      this.props.myProfileId\r\n    );\r\n  };\r\n\r\n  render = () => {\r\n    return (\r\n      <Profile\r\n        {...this.props}\r\n        status={this.props.status}\r\n        profile={this.props.profile}\r\n        updateUserStatus={this.props.updateUserStatus}\r\n      />\r\n    );\r\n  };\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    profile: getProfile(state),\r\n    myProfileId: getMyProfileId(state),\r\n    status: getProfileStatus(state),\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    getUserProfile,\r\n    getAuth,\r\n    getUserStatus,\r\n    updateUserStatus,\r\n  }),\r\n  withRouter,\r\n  withAuthRedirect\r\n)(ProfileContainer);\r\n"],"names":["minLength10","minLengthCreator","maxLength300","maxLengthCreator","reduxForm","form","props","onSubmit","handleSubmit","Field","component","FormInput","name","validate","className","s","src","alt","text","likes","postElements","posts","map","p","postId","formData","addPostFromForm","compose","connect","state","profilePage","newPostText","MyPosts","useState","editMode","setEditMode","status","setStatus","useEffect","toggleEditMode","updateUserStatus","profile","fullName","photos","large","userPhoto","onClick","autoFocus","onChange","e","currentTarget","value","onBlur","aboutMe","lookingForAJob","lookingForAJobDescription","Preloader","MyPostsContainer","ProfileContainer","componentDidMount","getUserProfile","router","params","userId","myProfileId","getUserStatus","render","React","getProfile","getMyProfileId","getProfileStatus","getAuth","withRouter","withAuthRedirect"],"sourceRoot":""}