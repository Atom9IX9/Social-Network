{"version":3,"file":"static/js/104.aba4b5a3.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/Profile/MyPosts/MyPosts.module.css?831b","components/Profile/MyPosts/MyPostsForm/MyPostsForm.jsx","webpack://my-app/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.module.css","webpack://my-app/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","webpack://my-app/./src/components/Profile/ProfileInfo/ProfileDescription/ProfileDescription.module.css?81bc","components/Profile/ProfileInfo/ProfileDescription/ProfileDescriptionWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"myPosts\":\"MyPosts_myPosts__RjhRC\",\"posts\":\"MyPosts_posts__QhSpD\"};","import { reduxForm, Field } from \"redux-form\";\r\nimport {\r\n  maxLengthCreator,\r\n  minLengthCreator,\r\n} from \"../../../../utils/validators\";\r\nimport FormInput from \"../../../common/forms/FormInput\";\r\n\r\nconst minLength10 = minLengthCreator(10);\r\nconst maxLength300 = maxLengthCreator(300);\r\n\r\nconst MyPostsForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <Field\r\n        component={FormInput}\r\n        name=\"newPostText\"\r\n        validate={[minLength10, maxLength300]}\r\n      />\r\n      <div>\r\n        <button>Add Post</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst myPostsReduxForm = reduxForm({\r\n  form: \"myPosts\",\r\n})(MyPostsForm);\r\n\r\nexport default myPostsReduxForm;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__bggH6\",\"likeBlock\":\"Post_likeBlock__hqtqM\",\"text\":\"Post_text__8R0Y1\"};","import s from \"./Post.module.css\";\r\nimport userPhoto from \"../../../../assets/img/defaultUserAv.jpg\";\r\n\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img\r\n        src={userPhoto}\r\n        alt=\"start user avatar\"\r\n      />\r\n      <div className={s.text}> {props.text} </div>\r\n      <div>\r\n        <span className={s.likeBlock}>\r\n          like(btn*)\r\n          <br />({props.likes} peoples like this! )\r\n        </span>\r\n      </div>\r\n      <hr />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport MyPostsForm from \"./MyPostsForm/MyPostsForm\";\r\nimport Post from \"./Post/Post\";\r\n\r\nconst MyPosts = (props) => {\r\n  let postElements = props.posts.map((p) => (\r\n    <Post text={p.text} likes={p.likes} key={p.postId} />\r\n  ));\r\n\r\n  let onSubmit = (formData) => props.addPostFromForm(formData)\r\n\r\n  return (\r\n    <div className={s.myPosts}>\r\n      <h3>My Posts</h3>\r\n      <MyPostsForm\r\n        onSubmit={onSubmit}\r\n      />\r\n      <div className={s.posts}>{postElements}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyPosts;\r\n","import MyPosts from \"./MyPosts\";\r\nimport { addPostFromForm } from \"../../../redux/profileReducer\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText,\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { addPostFromForm })\r\n)(MyPosts);\r\n","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {\"header\":\"ProfileInfo_header__tVpgS\"};","// extracted by mini-css-extract-plugin\nexport default {\"description\":\"ProfileDescription_description__c54HU\",\"avatar\":\"ProfileDescription_avatar__+sbzZ\",\"status\":\"ProfileDescription_status__eX8Qd\"};","import React from \"react\";\r\nimport s from \"./ProfileDescription.module.css\";\r\nimport userPhoto from \"../../../../assets/img/defaultUserAv.jpg\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst ProfileDescriptionWithHooks = (props) => {\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status]);\r\n\r\n  let toggleEditMode = () => {\r\n    if (props.isOwner) {\r\n      if (editMode) {\r\n        setEditMode(false);\r\n        props.updateUserStatus(status);\r\n      } else {\r\n        setEditMode(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  let onFileSelected = (e) => {\r\n    if (e.target.files.length) {\r\n      props.saveAvatar(e.target.files[0])\r\n    }\r\n  };\r\n\r\n  let onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n  };\r\n\r\n  return (\r\n    <div className={s.description}>\r\n      <div className={s.fullName}>{props.profile.fullName}</div>\r\n      <img\r\n        className={s.avatar}\r\n        src={\r\n          props.profile.photos.large ? props.profile.photos.large : userPhoto\r\n        }\r\n        alt=\"user avatar\"\r\n      />\r\n      {props.isOwner && <input type=\"file\" onChange={onFileSelected} />}\r\n      <div className={s.status}>\r\n        {!editMode && (\r\n          <div onClick={toggleEditMode}>\r\n            <span>{props.status || \"------\"}</span>\r\n          </div>\r\n        )}\r\n        {editMode && (\r\n          <div>\r\n            <input\r\n              autoFocus={true}\r\n              onChange={onStatusChange}\r\n              onBlur={toggleEditMode}\r\n              value={status}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className={s.aboutMe}>{props.profile.aboutMe}</div>\r\n      <h5>About Job</h5>\r\n      <div className={s.lookingForAJob}>\r\n        Need work: {props.profile.lookingForAJob ? \"Yes\" : \"No\"}{\" \"}\r\n      </div>\r\n      <div className={s.workDescription}>\r\n        {props.profile.lookingForAJobDescription}{\" \"}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileDescriptionWithHooks;\r\n","import s from \"./ProfileInfo.module.css\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileDescriptionWithHooks from \"./ProfileDescription/ProfileDescriptionWithHooks\";\r\n\r\nconst ProfileInfo = (props) => {\r\n  if (!props.profile) {\r\n    return <Preloader />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className={s.header}>\r\n        {/* <img\r\n          src={\r\n            \"https://ichef.bbci.co.uk/news/999/cpsprodpb/6D5A/production/_119449972_10.jpg\"\r\n          }\r\n          alt=\"default header\"\r\n        /> */}\r\n      </div>\r\n      <ProfileDescriptionWithHooks\r\n        updateUserStatus={props.updateUserStatus}\r\n        profile={props.profile}\r\n        status={props.status}\r\n        isOwner={props.isOwner}\r\n        saveAvatar={props.saveAvatar}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport style from \"./Profile.module.css\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div className={style.profilePage}>\r\n      <ProfileInfo\r\n        profile={props.profile}\r\n        status={props.status}\r\n        updateUserStatus={props.updateUserStatus}\r\n        isOwner={props.isOwner}\r\n        saveAvatar={props.saveAvatar}\r\n      />\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Profile from \"./Profile\";\r\nimport {\r\n  getUserProfile,\r\n  getUserStatus,\r\n  updateUserStatus,\r\n  saveAvatar\r\n} from \"../../redux/profileReducer\";\r\nimport { getAuth } from \"../../redux/authReducer\";\r\nimport withRouter from \"../../hoc/withRouter\";\r\nimport withAuthRedirect from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\nimport {\r\n  getMyProfileId,\r\n  getProfile,\r\n  getProfileStatus,\r\n} from \"../../redux/selectors\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n  updateProfile = () => {\r\n    this.props.getUserProfile(\r\n      this.props.router.params.userId,\r\n      this.props.myProfileId\r\n    );\r\n    this.props.getUserStatus(\r\n      this.props.router.params.userId,\r\n      this.props.myProfileId\r\n    );\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.updateProfile();\r\n  };\r\n\r\n  componentDidUpdate = (prevProps, prevState) => {\r\n    if (prevProps.router.params.userId !== this.props.router.params.userId) {\r\n      this.updateProfile();\r\n    }\r\n  };\r\n\r\n  render = () => {\r\n    return (\r\n      <Profile\r\n        {...this.props}\r\n        status={this.props.status}\r\n        profile={this.props.profile}\r\n        updateUserStatus={this.props.updateUserStatus}\r\n        isOwner={!this.props.router.params.userId}\r\n        saveAvatar={this.props.saveAvatar}\r\n      />\r\n    );\r\n  };\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    profile: getProfile(state),\r\n    myProfileId: getMyProfileId(state),\r\n    status: getProfileStatus(state),\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    getUserProfile,\r\n    getAuth,\r\n    getUserStatus,\r\n    updateUserStatus,\r\n    saveAvatar\r\n  }),\r\n  withRouter,\r\n  withAuthRedirect\r\n)(ProfileContainer);\r\n"],"names":["minLength10","minLengthCreator","maxLength300","maxLengthCreator","reduxForm","form","props","onSubmit","handleSubmit","Field","component","FormInput","name","validate","className","s","src","userPhoto","alt","text","likes","postElements","posts","map","p","postId","formData","addPostFromForm","compose","connect","state","profilePage","newPostText","MyPosts","useState","editMode","setEditMode","status","setStatus","useEffect","toggleEditMode","isOwner","updateUserStatus","profile","fullName","photos","large","type","onChange","e","target","files","length","saveAvatar","onClick","autoFocus","currentTarget","value","onBlur","aboutMe","lookingForAJob","lookingForAJobDescription","Preloader","style","MyPostsContainer","ProfileContainer","updateProfile","getUserProfile","router","params","userId","myProfileId","getUserStatus","componentDidMount","componentDidUpdate","prevProps","prevState","render","React","getProfile","getMyProfileId","getProfileStatus","getAuth","withRouter","withAuthRedirect"],"sourceRoot":""}