{"version":3,"file":"static/js/361.c74fd7f9.chunk.js","mappings":"8LAOMA,EAAK,IAAIC,UACb,gEAGIC,EAAWC,EAAAA,MAAW,WAC1B,OAAO,SAACC,EAAI,GACd,IAEMA,EAAOD,EAAAA,MAAW,WACtB,OACE,4BACE,SAACE,EAAY,KACb,SAACC,EAAkB,MAGzB,IAEMD,EAA4CF,EAAAA,MAAW,WAC3D,IAAMI,GAAWC,EAAAA,EAAAA,KACf,SAACC,GAAoB,OAAKA,EAAMC,SAASC,YAAY,IAEjDC,GAAWC,EAAAA,EAAAA,MAWjB,OATAC,EAAAA,EAAAA,YAAU,WAERd,EAAGe,iBAAiB,WAAW,SAACC,GAE9B,IAAMC,EAAcC,KAAKC,MAAMH,EAAEI,MACjCR,EAASS,EAAAA,EAAAA,gBAAwBJ,GACnC,GACF,GAAG,KAGD,gBAAKK,MAAO,CAAEC,SAAU,OAAQC,OAAQ,SAAU,SAC/CjB,EAASkB,KAAI,SAACC,EAAGC,GAAK,OACrB,SAACC,EAAO,CAACC,QAASH,GAAQC,EAAS,KAI3C,IAEMrB,EAAqB,WACzB,OAA8BwB,EAAAA,EAAAA,UAAS,IAAG,eAAnCD,EAAO,KAAEE,EAAU,KAQ1B,OACE,iCACE,qBACEC,SAAU,SAAChB,GAAC,OAAKe,EAAWf,EAAEiB,cAAcC,MAAM,EAClDA,MAAOL,KAET,mBAAQM,QAZQ,WACbN,IACL7B,EAAGoC,KAAKP,GACRE,EAAW,IACb,EAQiC,oBAGnC,EAEMH,EAAsC,SAAH,GAAqB,IAAfC,EAAO,EAAPA,QAC7C,OACE,gBAAKP,MAAO,CAAEe,UAAW,QAAS,UAChC,SAAC,IAAI,CACHC,MAAOT,EAAQU,SACfC,OAAO,SAAC,IAAM,CAACC,KAAM,GAAIC,IAAKb,EAAQc,OAASC,IAC/CtB,MAAO,CAAEuB,MAAO,KAAM,UAEtB,yBAAMhB,EAAQA,aAItB,EAEA,UAAe1B,EAAAA,KAAWD,E","sources":["components/Chat/Chat.tsx"],"sourcesContent":["import { Avatar, Card } from \"antd\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport DefaultAvatarImg from \"../../assets/img/defaultUserAv.jpg\";\r\nimport { actions, ChatMessageType } from \"../../redux/chatReducer\";\r\nimport { rootStateType } from \"../../redux/reduxStore\";\r\n\r\nconst ws = new WebSocket(\r\n  \"wss://social-network.samuraijs.com/handlers/ChatHandler.ashx\"\r\n);\r\n\r\nconst ChatPage = React.memo(() => {\r\n  return <Chat />;\r\n});\r\n\r\nconst Chat = React.memo(() => {\r\n  return (\r\n    <div>\r\n      <ChatMessages />\r\n      <AddChatMessageForm />\r\n    </div>\r\n  );\r\n});\r\n\r\nconst ChatMessages: React.FC<ChatMessagesProps> = React.memo(() => {\r\n  const messages = useSelector(\r\n    (state: rootStateType) => state.chatPage.chatMessages\r\n  );\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    debugger;\r\n    ws.addEventListener(\"message\", (e) => {\r\n      debugger;\r\n      const newMessages = JSON.parse(e.data);\r\n      dispatch(actions.setChatMessages(newMessages));\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ overflow: \"auto\", height: \"350px\" }}>\r\n      {messages.map((m, index) => (\r\n        <Message message={m} key={index} />\r\n      ))}\r\n    </div>\r\n  );\r\n});\r\n\r\nconst AddChatMessageForm = () => {\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const sendMessage = () => {\r\n    if (!message) return;\r\n    ws.send(message);\r\n    setMessage(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <textarea\r\n        onChange={(e) => setMessage(e.currentTarget.value)}\r\n        value={message}\r\n      ></textarea>\r\n      <button onClick={sendMessage}>send</button>\r\n    </>\r\n  );\r\n};\r\n\r\nconst Message: React.FC<MessagePropsType> = ({ message }) => {\r\n  return (\r\n    <div style={{ marginTop: \"40px\" }}>\r\n      <Card\r\n        title={message.userName}\r\n        extra={<Avatar size={32} src={message.photo || DefaultAvatarImg} />}\r\n        style={{ width: 500 }}\r\n      >\r\n        <div>{message.message}</div>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(ChatPage);\r\n\r\ntype MessagePropsType = {\r\n  message: ChatMessageType;\r\n};\r\ntype ChatMessagesProps = {};\r\n"],"names":["ws","WebSocket","ChatPage","React","Chat","ChatMessages","AddChatMessageForm","messages","useSelector","state","chatPage","chatMessages","dispatch","useDispatch","useEffect","addEventListener","e","newMessages","JSON","parse","data","actions","style","overflow","height","map","m","index","Message","message","useState","setMessage","onChange","currentTarget","value","onClick","send","marginTop","title","userName","extra","size","src","photo","DefaultAvatarImg","width"],"sourceRoot":""}