{"version":3,"file":"static/js/383.6551a287.chunk.js","mappings":"8LACA,EAA0B,yBAA1B,EAA0D,sBAA1D,EAAyF,wBAAzF,EAAiI,+B,mBCsBjI,EAlByC,SAAH,GAAkC,IAA7BA,EAAS,EAATA,UAAWC,EAAW,EAAXA,YAC9CC,EAAI,UAAMF,GAEhB,OACE,gBAAKG,UAAWC,EAAc,UAC5B,UAAC,KAAO,CACNC,GAAIH,EACJC,UAAW,YAAW,SAARG,SAA2BF,EAAe,EAAE,EAAE,WAE5D,gBAAKD,UAAWC,EAAoB,UAClC,gBAAKG,IAAKC,EAAWC,IAAI,mBAE3B,gBAAKN,UAAWC,EAAW,SAAEH,QAIrC,ECjBA,EAJyC,SAAH,GAA8B,IAAzBE,EAAS,EAATA,UAAWO,EAAO,EAAPA,QACpD,OAAO,gBAAKP,UAAWA,EAAU,SAAEO,GACrC,ECDA,GAAgB,aAAe,+BAA+B,SAAW,2BAA2B,cAAgB,gCAAgC,eAAiB,iCAAiC,UAAY,4BAA4B,iBAAmB,oC,4BCAjQ,EAAuB,2BCqBvB,GAJ0BC,EAAAA,EAAAA,GAA+B,CACvDC,KAAM,YADkBD,EAXwB,SAAH,GAA0B,IAApBE,EAAY,EAAZA,aACnD,OACE,kBAAMC,SAAUD,EAAcV,UAAWC,EAAW,WACjDW,EAAAA,EAAAA,GAAsC,aAAcC,EAAAA,EAAW,iBAAkB,KAClF,0BACE,yCAIR,ICqBA,EA9B2C,SAAH,GAAkD,IAA7CC,EAAQ,EAARA,SAAUC,EAAQ,EAARA,SAAUC,EAAkB,EAAlBA,mBAC3DC,EAAkBH,EAASI,KAAI,SAACC,GAAC,OACnC,gBAAKnB,UAAWC,EAAAA,QAAc,UAC5B,SAAC,EAAO,CAACH,YAAaqB,EAAEC,KAAMvB,UAAWsB,EAAEtB,aADTsB,EAAEtB,UAEhC,IAGJwB,EAAkBN,EAASG,KAAI,SAACI,GAAC,OACnC,SAAC,EAAO,CACNf,QAASe,EAAEf,QAEXP,UAAWsB,EAAEC,KAAOtB,EAAAA,UAAkBA,EAAAA,gBADjCqB,EAAEE,UAEP,IAOJ,OACE,iBAAKxB,UAAWC,EAAAA,aAAmB,WACjC,gBAAKD,UAAWC,EAAAA,SAAe,SAAEgB,KACjC,iBAAKjB,UAAWC,EAAAA,cAAoB,WAClC,gBAAKD,UAAWC,EAAAA,iBAAuB,SAAEoB,KACzC,SAAC,EAAY,CAACV,SATL,SAACc,GACdT,EAAmBS,EACrB,SAWF,E,8BCdA,GAAeC,EAAAA,EAAAA,KACbC,EAAAA,EAAAA,KARoB,SAACC,GACrB,MAAO,CACLd,UAAUe,EAAAA,EAAAA,IAAoBD,GAC9Bb,UAAUe,EAAAA,EAAAA,IAAYF,GAE1B,GAKI,CAAEZ,mBAAAA,EAAAA,KAEJe,EAAAA,EALF,CAMEC,E","sources":["webpack://my-app/./src/components/Messages/Contact/Contact.module.css?f093","components/Messages/Contact/Contact.tsx","components/Messages/Message/Message.tsx","webpack://my-app/./src/components/Messages/Messages.module.css?8e7e","webpack://my-app/./src/components/Messages/MessagesForm/MessagesForm.module.css?7776","components/Messages/MessagesForm/MessagesForm.tsx","components/Messages/Messages.tsx","components/Messages/MessagesContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"contact\":\"Contact_contact__h8fJU\",\"name\":\"Contact_name__qJ-ad\",\"active\":\"Contact_active__wDHBw\",\"avatarWrapper\":\"Contact_avatarWrapper__EqAlV\",\"avatarWraper\":\"Contact_avatarWraper__zWOkq\"};","import { NavLink } from \"react-router-dom\";\r\nimport style from \"./Contact.module.css\";\r\nimport userPhoto from \"../../../assets/img/defaultUserAv.jpg\";\r\nimport React from \"react\";\r\n\r\nconst Contact: React.FC<TContactProps> = ({contactId, contactName}) => {\r\n  const path = `${contactId}`;\r\n\r\n  return (\r\n    <div className={style.contact}>\r\n      <NavLink\r\n        to={path}\r\n        className={({ isActive }) => (isActive ? style.active : \"\")}\r\n      >\r\n        <div className={style.avatarWrapper}>\r\n          <img src={userPhoto} alt=\"user avatar\" />\r\n        </div>\r\n        <div className={style.name}>{contactName}</div>\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n\r\ntype TContactProps = {contactId: number; contactName: string}\r\n","const Message: React.FC<TMessageProps> = ({className, message}) => {\r\n  return <div className={className}>{message}</div>;\r\n};\r\n\r\nexport default Message;\r\n\r\ntype TMessageProps = { className: string; message: string }\r\n","// extracted by mini-css-extract-plugin\nexport default {\"messagesPage\":\"Messages_messagesPage__S+tN4\",\"contacts\":\"Messages_contacts__acBEK\",\"messagesItems\":\"Messages_messagesItems__jsvtj\",\"contactMessage\":\"Messages_contactMessage__anT5P\",\"myMessage\":\"Messages_myMessage__UpyXb\",\"messagesElements\":\"Messages_messagesElements__L8tbo\"};","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"MessagesForm_form__F-2Nr\"};","import React from \"react\";\r\nimport { reduxForm, InjectedFormProps } from \"redux-form\";\r\nimport { MessageFormDataType } from \"../../../redux/messagesReducer\";\r\nimport { createForm } from \"../../common/forms/createForm\";\r\nimport {FormInput} from \"../../common/forms/FormControls\";\r\nimport style from \"./MessagesForm.module.css\"\r\n\r\nconst MessagesForm: React.FC<MessagesFormProps> = ({ handleSubmit }) => {\r\n  return (\r\n    <form onSubmit={handleSubmit} className={style.form}>\r\n      {createForm<keyof MessageFormDataType>(\"newMessage\", FormInput, \"...new message\", [])}\r\n      <div>\r\n        <button>Send</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst MessagesReduxForm = reduxForm<MessageFormDataType>({\r\n  form: \"messages\",\r\n})(MessagesForm);\r\n\r\nexport default MessagesReduxForm;\r\n\r\ntype MessagesFormProps = InjectedFormProps<MessageFormDataType>\r\n","import React from \"react\";\r\nimport { ContactType, MessageFormDataType, MessageType } from \"../../redux/messagesReducer\";\r\nimport Contact from \"./Contact/Contact\";\r\nimport Message from \"./Message/Message\";\r\nimport style from \"./Messages.module.css\";\r\nimport MessagesForm from \"./MessagesForm/MessagesForm\";\r\n\r\nconst Messages: React.FC<TMessagesProps> = ({contacts, messages, addMessageFromForm}) => {\r\n  let contactElements = contacts.map((c) => (\r\n    <div className={style.contact} key={c.contactId}>\r\n      <Contact contactName={c.name} contactId={c.contactId} />\r\n    </div>\r\n  ));\r\n\r\n  let MessageElements = messages.map((m) => (\r\n    <Message\r\n      message={m.message}\r\n      key={m.messageId}\r\n      className={m.isMy ? style.myMessage : style.contactMessage}\r\n    />\r\n  ));\r\n\r\n  let onSubmit = (formData: MessageFormDataType) => {\r\n    addMessageFromForm(formData);\r\n  };\r\n\r\n  return (\r\n    <div className={style.messagesPage}>\r\n      <div className={style.contacts}>{contactElements}</div>\r\n      <div className={style.messagesItems}>\r\n        <div className={style.messagesElements}>{MessageElements}</div>\r\n        <MessagesForm onSubmit={onSubmit} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Messages;\r\n\r\ntype TMessagesProps = {\r\n  contacts: Array<ContactType>;\r\n  messages: Array<MessageType>;\r\n  addMessageFromForm: (formData: MessageFormDataType) => void\r\n}\r\n","import { connect } from \"react-redux\";\r\nimport {\r\n  addMessageFromForm,\r\n  ContactType,\r\n  MessageFormDataType,\r\n  MessageType,\r\n} from \"../../redux/messagesReducer\";\r\nimport Messages from \"./Messages\";\r\nimport withAuthRedirect from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\nimport { getMessages, getMessagesContacts } from \"../../redux/selectors\";\r\nimport { rootStateType } from \"../../redux/reduxStore\";\r\nimport { ComponentType } from \"react\";\r\n\r\nlet mapStateToProps = (state: rootStateType) => {\r\n  return {\r\n    contacts: getMessagesContacts(state),\r\n    messages: getMessages(state),\r\n  };\r\n};\r\n\r\nexport default compose<ComponentType>(\r\n  connect<MapStateToProps, MapDispatchToProps, {}, rootStateType>(\r\n    mapStateToProps,\r\n    { addMessageFromForm }\r\n  ),\r\n  withAuthRedirect\r\n)(Messages);\r\n\r\ntype MapStateToProps = {\r\n  contacts: Array<ContactType>;\r\n  messages: Array<MessageType>;\r\n};\r\ntype MapDispatchToProps = {\r\n  addMessageFromForm: (formData: MessageFormDataType) => void;\r\n};\r\n"],"names":["contactId","contactName","path","className","style","to","isActive","src","userPhoto","alt","message","reduxForm","form","handleSubmit","onSubmit","createForm","FormInput","contacts","messages","addMessageFromForm","contactElements","map","c","name","MessageElements","m","isMy","messageId","formData","compose","connect","state","getMessagesContacts","getMessages","withAuthRedirect","Messages"],"sourceRoot":""}