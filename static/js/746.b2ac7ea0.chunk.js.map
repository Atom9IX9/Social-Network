{"version":3,"file":"static/js/746.b2ac7ea0.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/Profile/MyPosts/MyPosts.module.css?831b","components/Profile/MyPosts/MyPostsForm/MyPostsForm.jsx","webpack://my-app/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.module.css","webpack://my-app/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","webpack://my-app/./src/components/Profile/ProfileInfo/ProfileDescription/ProfileDescription.module.css?81bc","components/Profile/ProfileInfo/ProfileDescription/AboutUser/AboutUser.jsx","components/Profile/ProfileInfo/ProfileDescription/UserPreview/UserPreview.jsx","components/Profile/ProfileInfo/ProfileDescription/UserStatus/UserStatus.jsx","components/Profile/ProfileInfo/ProfileDescription/AboutUserForm.jsx","components/Profile/ProfileInfo/ProfileDescription/ProfileDescriptionWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"myPosts\":\"MyPosts_myPosts__RjhRC\",\"posts\":\"MyPosts_posts__QhSpD\"};","import { reduxForm, Field } from \"redux-form\";\r\nimport {\r\n  maxLengthCreator,\r\n  minLengthCreator,\r\n} from \"../../../../utils/validators\";\r\nimport {FormInput} from \"../../../common/forms/FormInput\";\r\n\r\nconst minLength10 = minLengthCreator(10);\r\nconst maxLength300 = maxLengthCreator(300);\r\n\r\nconst MyPostsForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <Field\r\n        component={FormInput}\r\n        name=\"newPostText\"\r\n        validate={[minLength10, maxLength300]}\r\n      />\r\n      <div>\r\n        <button>Add Post</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst myPostsReduxForm = reduxForm({\r\n  form: \"myPosts\",\r\n})(MyPostsForm);\r\n\r\nexport default myPostsReduxForm;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__bggH6\",\"likeBlock\":\"Post_likeBlock__hqtqM\",\"text\":\"Post_text__8R0Y1\"};","import s from \"./Post.module.css\";\r\nimport userPhoto from \"../../../../assets/img/defaultUserAv.jpg\";\r\n\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img\r\n        src={userPhoto}\r\n        alt=\"start user avatar\"\r\n      />\r\n      <div className={s.text}> {props.text} </div>\r\n      <div>\r\n        <span className={s.likeBlock}>\r\n          like(btn*)\r\n          <br />({props.likes} peoples like this! )\r\n        </span>\r\n      </div>\r\n      <hr />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport MyPostsForm from \"./MyPostsForm/MyPostsForm\";\r\nimport Post from \"./Post/Post\";\r\n\r\nconst MyPosts = (props) => {\r\n  let postElements = props.posts.map((p) => (\r\n    <Post text={p.text} likes={p.likes} key={p.postId} />\r\n  ));\r\n\r\n  let onSubmit = (formData) => props.addPostFromForm(formData)\r\n\r\n  return (\r\n    <div className={s.myPosts}>\r\n      <h3>My Posts</h3>\r\n      <MyPostsForm\r\n        onSubmit={onSubmit}\r\n      />\r\n      <div className={s.posts}>{postElements}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyPosts;\r\n","import MyPosts from \"./MyPosts\";\r\nimport { addPostFromForm } from \"../../../redux/profileReducer\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText,\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { addPostFromForm })\r\n)(MyPosts);\r\n","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {\"header\":\"ProfileInfo_header__tVpgS\",\"LookingForAJob\":\"ProfileInfo_LookingForAJob__5CwD6\",\"saveBtn\":\"ProfileInfo_saveBtn__HyeIj\",\"formInp\":\"ProfileInfo_formInp__d5l3I\",\"labelText\":\"ProfileInfo_labelText__FEMim\"};","// extracted by mini-css-extract-plugin\nexport default {\"description\":\"ProfileDescription_description__c54HU\",\"fullName\":\"ProfileDescription_fullName__CJFbG\",\"avatar\":\"ProfileDescription_avatar__+sbzZ\",\"status\":\"ProfileDescription_status__eX8Qd\"};","import s from \"../ProfileDescription.module.css\";\r\n\r\nconst AboutUser = ({ profile, toggleEditMode, isOwner }) => {\r\n  let contactLinks = Object.keys(profile.contacts).map((key) => {\r\n    if (!profile.contacts[key]) return null;\r\n    return <Contact  key={key} linkName={key} link={profile.contacts[key]} />;\r\n  }).filter(c => c !== null);\r\n\r\n  return (\r\n    <>\r\n      <div className={s.aboutMe}>{profile.aboutMe}</div>\r\n      <h5>About Job</h5>\r\n      <div className={s.lookingForAJob}>\r\n        Need work: {profile.lookingForAJob ? \"Yes\" : \"No\"}\r\n      </div>\r\n      <div className={s.workDescription}>\r\n        {profile.lookingForAJobDescription}\r\n      </div>\r\n      <div className={s.contacts}>\r\n        contacts: {contactLinks.length ? contactLinks : \"no contacts\"}\r\n      </div>\r\n      {isOwner && <button onClick={toggleEditMode}>edit</button>}\r\n    </>\r\n  );\r\n};\r\n\r\nconst Contact = ({ linkName, link }) => {\r\n  if (!link) return;\r\n\r\n  return (\r\n    <div>\r\n      <span>{linkName}</span>: <a href={link} target=\"_blank\" rel=\"noreferrer\"><span>{link}</span></a>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AboutUser;\r\n","import React from \"react\";\r\nimport userDefaultPhoto from \"../../../../../assets/img/defaultUserAv.jpg\";\r\nimport s from \"../ProfileDescription.module.css\";\r\n\r\nconst UserPreview = ({ fullName, userProfilePhoto, isOwner, saveAvatar }) => {\r\n  let onFileSelected = (e) => {\r\n    if (e.target.files.length) {\r\n      saveAvatar(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={s.fullName}>{fullName}</div>\r\n      <img\r\n        className={s.avatar}\r\n        src={userProfilePhoto ? userProfilePhoto : userDefaultPhoto}\r\n        alt=\"user avatar\"\r\n      />\r\n      {isOwner && <div><input type=\"file\" onChange={onFileSelected} /></div>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserPreview;\r\n","import { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport s from \"../ProfileDescription.module.css\";\r\n\r\nconst UserStatus = ({ status, updateUserStatus, isOwner }) => {\r\n  let [localStateStatus, setStatus] = useState(status);\r\n  let [editMode, setEditMode] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setStatus(status);\r\n  }, [status]);\r\n\r\n  let onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n  };\r\n\r\n  let toggleEditMode = () => {\r\n    if (isOwner) {\r\n      if (editMode) {\r\n        setEditMode(false);\r\n        updateUserStatus(localStateStatus);\r\n      } else {\r\n        setEditMode(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={s.status}>\r\n      {!editMode && (\r\n        <div onClick={toggleEditMode}>\r\n          <span>{status || \"------\"}</span>\r\n        </div>\r\n      )}\r\n      {editMode && (\r\n        <div>\r\n          <input\r\n            autoFocus={true}\r\n            onChange={onStatusChange}\r\n            onBlur={toggleEditMode}\r\n            value={localStateStatus}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserStatus\r\n","import React from \"react\";\r\nimport { reduxForm } from \"redux-form\";\r\nimport {\r\n  maxLengthCreator,\r\n  minLengthCreator,\r\n  required,\r\n} from \"../../../../utils/validators\";\r\nimport {\r\n  FormInput,\r\n  FormTextarea,\r\n  createForm,\r\n} from \"../../../common/forms/FormInput\";\r\nimport s from \"../ProfileInfo.module.css\";\r\n\r\nconst AboutUserForm = (props) => {\r\n  const maxLength20 = maxLengthCreator(20);\r\n  const minLength3 = minLengthCreator(3);\r\n  let contactInputs = Object.keys(props.profile.contacts)\r\n    .map((key) => {\r\n      return (\r\n        <div key={key} className={s.contact}>\r\n          <span className={s.linkName}>{key}</span>\r\n          {createForm(`contacts.${key}`, key, null, key, FormInput)}\r\n        </div>\r\n      );\r\n    })\r\n    .filter((c) => c !== null);\r\n\r\n    return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div className={s.formInp}>\r\n        <label htmlFor=\"userNameForm\">\r\n          <span className={s.labelText}>User name</span>\r\n        </label>\r\n        {createForm(\r\n          \"fullName\",\r\n          null,\r\n          [required, maxLength20, minLength3],\r\n          \"userNameForm\",\r\n          FormInput\r\n        )}\r\n      </div>\r\n      <div className={s.formInp}>\r\n        <label>\r\n          <span className={s.labelText}>About me</span>\r\n          {createForm(\"aboutMe\", null, [required], \"aboutMeId\", FormTextarea)}\r\n        </label>\r\n      </div>\r\n      <div className={s.formInp}>\r\n        <label htmlFor=\"LookingForAJobFormId\" className={s.LookingForAJob}>\r\n          <span className={s.labelText}>Looking for a job</span>\r\n          {createForm(\r\n            \"lookingForAJob\",\r\n            null,\r\n            null,\r\n            \"LookingForAJobFormId\",\r\n            FormInput,\r\n            \"checkbox\"\r\n          )}\r\n        </label>\r\n      </div>\r\n      <div className={s.formInp}>\r\n        <label>\r\n          <span className={s.labelText}>Skills</span>\r\n          <br />\r\n          {createForm(\r\n            \"lookingForAJobDescription\",\r\n            null,\r\n            [required],\r\n            \"lookingForAJobDescriptionId\",\r\n            FormTextarea\r\n          )}\r\n        </label>\r\n      </div>\r\n      <div className={s.contacts}>{contactInputs}</div>\r\n      <button className={s.saveBtn} onClick={props.error || props.toggleEditMode}>save</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst AboutUserFormReduxForm = reduxForm({\r\n  form: \"aboutUserForm\",\r\n  enableReinitialize: true,\r\n})(AboutUserForm);\r\n\r\nexport default AboutUserFormReduxForm;\r\n","import React from \"react\";\r\nimport s from \"./ProfileDescription.module.css\";\r\nimport AboutUser from \"./AboutUser/AboutUser\";\r\nimport UserPreview from \"./UserPreview/UserPreview\";\r\nimport UserStatus from \"./UserStatus/UserStatus\";\r\nimport { useState } from \"react\";\r\nimport AboutUserForm from \"./AboutUserForm\";\r\n\r\nconst ProfileDescriptionWithHooks = (props) => {\r\n  const [editMode, setEditMode] = useState(false);\r\n\r\n  const toggleEditMode = () => {\r\n    if (editMode) setEditMode(false);\r\n    else setEditMode(true);\r\n  };\r\n\r\n  const onSubmit = (FormData) => {\r\n    props\r\n      .saveChangedProfile({ ...FormData, userId: props.ownerId })\r\n      .then(() => toggleEditMode());\r\n  };\r\n\r\n  return (\r\n    <div className={s.description}>\r\n      <UserPreview\r\n        fullName={props.profile.fullName}\r\n        userProfilePhoto={props.profile.photos.large}\r\n        isOwner={props.isOwner}\r\n        saveAvatar={props.saveAvatar}\r\n      />\r\n\r\n      <UserStatus\r\n        status={props.status}\r\n        updateUserStatus={props.updateUserStatus}\r\n        isOwner={props.isOwner}\r\n      />\r\n\r\n      {editMode ? (\r\n        <AboutUserForm\r\n          onSubmit={onSubmit}\r\n          profile={props.profile}\r\n          initialValues={props.profile}\r\n        />\r\n      ) : (\r\n        <AboutUser\r\n          profile={props.profile}\r\n          toggleEditMode={toggleEditMode}\r\n          isOwner={props.isOwner}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileDescriptionWithHooks;\r\n","import s from \"./ProfileInfo.module.css\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileDescriptionWithHooks from \"./ProfileDescription/ProfileDescriptionWithHooks\";\r\n\r\nconst ProfileInfo = (props) => {\r\n  if (!props.profile) {\r\n    return <Preloader />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className={s.header}>\r\n        {/* <img\r\n          src={\r\n            \"https://ichef.bbci.co.uk/news/999/cpsprodpb/6D5A/production/_119449972_10.jpg\"\r\n          }\r\n          alt=\"default header\"\r\n        /> */}\r\n      </div>\r\n      <ProfileDescriptionWithHooks\r\n        updateUserStatus={props.updateUserStatus}\r\n        profile={props.profile}\r\n        status={props.status}\r\n        isOwner={props.isOwner}\r\n        saveAvatar={props.saveAvatar}\r\n        saveChangedProfile={props.saveChangedProfile}\r\n        ownerId={props.ownerId}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport style from \"./Profile.module.css\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div className={style.profilePage}>\r\n      <ProfileInfo\r\n        profile={props.profile}\r\n        status={props.status}\r\n        updateUserStatus={props.updateUserStatus}\r\n        isOwner={props.isOwner}\r\n        saveAvatar={props.saveAvatar}\r\n        saveChangedProfile={props.saveChangedProfile}\r\n        ownerId={props.myProfileId}\r\n      />\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Profile from \"./Profile\";\r\nimport {\r\n  getUserProfile,\r\n  getUserStatus,\r\n  updateUserStatus,\r\n  saveAvatar,\r\n  saveChangedProfile\r\n} from \"../../redux/profileReducer\";\r\nimport { getAuth } from \"../../redux/authReducer\";\r\nimport withRouter from \"../../hoc/withRouter\";\r\nimport withAuthRedirect from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\nimport {\r\n  getMyProfileId,\r\n  getProfile,\r\n  getProfileStatus,\r\n} from \"../../redux/selectors\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n  updateProfile = () => {\r\n    this.props.getUserProfile(\r\n      this.props.router.params.userId,\r\n      this.props.myProfileId\r\n    );\r\n    this.props.getUserStatus(\r\n      this.props.router.params.userId,\r\n      this.props.myProfileId\r\n    );\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.updateProfile();\r\n  };\r\n\r\n  componentDidUpdate = (prevProps, prevState) => {\r\n    if (prevProps.router.params.userId !== this.props.router.params.userId) {\r\n      this.updateProfile();\r\n    }\r\n  };\r\n\r\n  render = () => {\r\n    return (\r\n      <Profile\r\n        {...this.props}\r\n        status={this.props.status}\r\n        profile={this.props.profile}\r\n        updateUserStatus={this.props.updateUserStatus}\r\n        isOwner={!this.props.router.params.userId}\r\n        saveAvatar={this.props.saveAvatar}\r\n      />\r\n    );\r\n  };\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    profile: getProfile(state),\r\n    myProfileId: getMyProfileId(state),\r\n    status: getProfileStatus(state),\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    getUserProfile,\r\n    getAuth,\r\n    getUserStatus,\r\n    updateUserStatus,\r\n    saveAvatar,\r\n    saveChangedProfile\r\n  }),\r\n  withRouter,\r\n  withAuthRedirect\r\n)(ProfileContainer);\r\n"],"names":["minLength10","minLengthCreator","maxLength300","maxLengthCreator","reduxForm","form","props","onSubmit","handleSubmit","Field","component","FormInput","name","validate","className","s","src","userPhoto","alt","text","likes","postElements","posts","map","p","postId","formData","addPostFromForm","compose","connect","state","profilePage","newPostText","MyPosts","Contact","linkName","link","href","target","rel","profile","toggleEditMode","isOwner","contactLinks","Object","keys","contacts","key","filter","c","aboutMe","lookingForAJob","lookingForAJobDescription","length","onClick","fullName","userProfilePhoto","saveAvatar","userDefaultPhoto","type","onChange","e","files","status","updateUserStatus","useState","localStateStatus","setStatus","editMode","setEditMode","useEffect","autoFocus","currentTarget","value","onBlur","enableReinitialize","maxLength20","minLength3","contactInputs","createForm","htmlFor","required","FormTextarea","error","photos","large","FormData","saveChangedProfile","userId","ownerId","then","initialValues","Preloader","style","myProfileId","MyPostsContainer","ProfileContainer","updateProfile","getUserProfile","router","params","getUserStatus","componentDidMount","componentDidUpdate","prevProps","prevState","render","React","getProfile","getMyProfileId","getProfileStatus","getAuth","withRouter","withAuthRedirect"],"sourceRoot":""}